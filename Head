import discord
import asyncio
import string
from chatterbot.trainers import ListTrainer
from chatterbot.trainers import ChatterBotCorpusTrainer
from chatterbot import ChatBot
import sys

chatbot = ChatBot(
    'Chet',
    trainer='chatterbot.trainers.ListTrainer'
    )
chatbot.set_trainer(ChatterBotCorpusTrainer)
chatbot.train('chatterbot.corpus.english')
chatbot.train('chatterbot.corpus.english.greetings')
chatbot.train('chatterbot.corpus.english.conversations')
chatbot.set_trainer(ListTrainer)


def train():
    array = []
    with open("clean.txt") as a:
        for line in a:
            array.append(str(line))
    chatbot.train(array)
    print('Done Training')


def start_Chet():
    train()

start_Chet()


client = discord.Client()
print('Connected to Discord Client...')
print('Waiting for messages...')


def drop_digits(in_str):
    digit_list = "1234567890#"
    for char in digit_list:
        in_str = in_str.replace(char, "")

    return in_str

def get_feedback():
    from chatterbot.utils import input_function

    text = input_function()

    if 'yes' in text.lower():
        return False
    elif 'no' in text.lower():
        return True
    else:
        print('Please type either "Yes" or "No"')
        return get_feedback()


print("Type something to begin...")
def random_learn():
    while True:
        try:
            input_statement = chatbot.input.process_input_statement()
            statement, response = chatbot.generate_response(input_statement, DEFAULT_SESSION_ID)
            chatbot.output.process_response(response)
            print('\n Is "{}" a coherent response to "{}"? \n'.format(response, input_statement))
            if get_feedback():
                print("please input the correct one")
                response1 = chatbot.input.process_input_statement()
                chatbot.learn_response(response1, input_statement)
                print("Responses added to bot!")

        # Press ctrl-c or ctrl-d on the keyboard to exit
        except (KeyboardInterrupt, EOFError, SystemExit):
            break

@client.event
async def on_ready():
    #info
    print('Logged in as')
    print(client.user.name)
    print(client.user.id)
    print('------')

    channel = client.get_channel('321331526623297537')
    await client.send_message(client.get_channel('294353556448870401'), 'Hello everyone, Chet is here.', tts=False)
    await client.join_voice_channel(channel)
    print('Bot should joined the Channel')


@client.event
async def on_message(message):
    if message.content.startswith('Chet, '):
        array = []
        print('Received direct message...' + message.content)
        tmp = message.content
        user = message.author
        one, two = tmp.split('..')
        one = one.replace('Chet, ', '')
        array.append(analyzer(one))
        array.append(analyzer(two))
        print(one)
        print(two)
        #await client.send_message(client.get_channel('294353556448870401'), one, tts=True)
        #await client.send_message(client.get_channel('294353556448870401'), two, tts=True)


        print('User who sent it : ' + str(user))
        print('Continuing to listen to messages...')
        with open("clean.txt", "a") as att_file:
            for item in array:
                print(str(item))
                att_file.write(str(item) + "\n")
        print('Training with new info...')

    elif message.content.startswith('Chet.train'):
        user = message.author
        print('Got request for train.')
        await client.send_message(client.get_channel('294353556448870401'), str(user) + ' started training', tts=False)
        train()
        await client.send_message(client.get_channel('294353556448870401'), 'Training finished...', tts=False)

    elif message.content.startswith('Chet.leave'):
        user = message.author
        print('Got request for exit.')
        await client.send_message(client.get_channel('294353556448870401'), str(user) + ' wants me to leave', tts=False)
        await client.send_message(client.get_channel('294353556448870401'), 'Bye you fuckers.', tts=True)
        client.logout()
        exit()

    elif message.content.startswith('Chet...'):
        question = str(message.content)
        question = question.replace('Chet...', '')
        response = chatbot.get_response(question)
        if question == 'come here':
            user = str(message.author)
            print(user)
        print('Got request : ' + str(question))
        print('Answered : ' + str(response))
        await client.send_message(client.get_channel('294353556448870401'), str(response), tts=False)

    elif message.content.startswith(''):
        array = []
        print('Received random message...')
        tmp = message.content
        user = message.author
        three = tmp
        array.append(analyzer(three))
        if (str(user) == 'A.tothe.Zizzle#8885') & (message.content.startswith('Listen up, ')):
            await client.send_message(client.get_channel('294353556448870401'), "Everyone listen, my God is speaking.", tts=False)
        if str(user) != 'Chet#1584':
            with open("clean.txt", "a") as att_file:
                for item in array:
                    print(item)
                    att_file.write(item + "\n")


def analyzer(clean_line):
    held = str.lower(clean_line)
    return held


client.run('TOKENS')

